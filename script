create table Employee(
EmpId int not null,
EmpName varchar(50),
EmpAlias1 varchar(50),
EmpAlias2 varchar(50),
EmpAlias3 varchar(50),
)

create procedure spGetAllEmployees1
as 
begin
Select * from Employee
end

create procedure spGetFilterEmployees(@empid int)
as
begin
Select * from Employee where EmpId = @empid
end

CREATE PROCEDURE [dbo].[usp_Insert_Employee]
	-- Add the parameters for the stored procedure here
	@EmpId as int,
	@EmpName as varchar(50),
    @EmpAlias1 as varchar(50),
    @EmpAlias2 as varchar(50),
	@EmpAlias3 as varchar(50),


	@ErrorCode int output
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    INSERT INTO [dbo].[Employee]
           ([EmpId]
           ,[EmpName]
           ,[EmpAlias1]
           ,[EmpAlias2]
           ,[EmpAlias3])
         
     VALUES
           (@EmpId
           ,@EmpName
           ,@EmpAlias1
           ,@EmpAlias2
           ,@EmpAlias3)
         


SET @ErrorCode = @@ERROR
END

GO



alter PROCEDURE [dbo].[GetEmp]        
       @EmpId INT                    
      ,@RecordCount INT OUTPUT        
AS        
BEGIN  

--declare @EmpId INT  
--declare  @RecordCount INT


	DECLARE @SQLString nvarchar(4000)
	DECLARE @ParmDefinition nvarchar(500);      
	

	SET @SQLString =N'SELECT @RecordCountout=COUNT(*) FROM Employee' +' ' 
	SET @ParmDefinition = N'@RecordCountout INT OUTPUT' 
	SET @SQLString = @SQLString+'select * from Employee where EmpId=' +cast(@EmpId as varchar(10))
  
	exec sp_executesql  @SQLString,@ParmDefinition,@RecordCountout=@RecordCount OUTPUT;        
      
	print  @SQLString 
	    
	SELECT @RecordCount as '@RecordCountout' 

end

declare  @RecordCount int
exec [GetEmp] 1,@RecordCount=@RecordCount output
